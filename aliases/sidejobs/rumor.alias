embed
<drac2>
# Configuration Variables
VERSION = '2.1.1'

DATA_VAR_1 = "96111624-7e94-46f7-b32e-f0c2d6c52b13"
DATA_VAR_2 = "dd5538b0-aab8-4ac0-a82c-5f08aa8cf42b"
DAILY_CAP = 2

def add_coins(coins_dict, all_bags = None):
    all_bags = all_bags if all_bags != None else load_json(character().cvars['bags'])
    [[bag[1].update({key: bag[1][key] + coins_dict[key]}) for key in coins_dict.keys()] for bag in all_bags if bag[0] == 'Coin Pouch']
    character().set_cvar('bags', dump_json(all_bags))
    diff = {'cp': 0, 'sp': 0, 'ep': 0, 'gp': 0, 'pp': 0}
    diff.update(coins_dict)
    character().coinpurse.modify_coins(cp=diff['cp'], sp=diff['sp'], ep=diff['ep'], gp=diff['gp'], pp=diff['pp'])

def get_daily_activity_data(control_var, daily_cap):
    cvars = character().cvars
    if control_var not in cvars:
        character().set_cvar(control_var, f"0:0")
        return { "count": 0, "wait_time": None }
    else:
        var_parts = cvars[control_var].split(':')
        count, first_time = int(var_parts[0]), float(var_parts[1])
        now = time()
        if count > 0 and first_time != None:
            passed_in_day_since_first_time = first_time % 86400
            next_midnight_after_first_time = first_time + (86400 - passed_in_day_since_first_time)
            if now > next_midnight_after_first_time:
                character().set_cvar(control_var, f"0:0")
                return { "count": 0, "wait_time": None }
            if count >= daily_cap:
                wait_time = next_midnight_after_first_time - now
                hours = floor(wait_time / 3600)
                minutes = ceil(wait_time / 60) if hours == 0 else ceil((wait_time % 3600) / 60)
                wait_text = (str(hours) + ' hours and ' if hours > 0 else '') + str(minutes) + ' minutes'
                return { "count": count, "wait_time": wait_text }
        return { "count": count, "wait_time": None }

def increase_daily_activity_data(control_var):
    cvars = character().cvars
    if not control_var in cvars or cvars[control_var] == "0:0":
        character().set_cvar(control_var, f'1:{time()}')
        return 1
    else:
        var_parts = cvars[control_var].split(':')
        count, last_time = int(var_parts[0]) + 1, var_parts[1]
        character().set_cvar(control_var, f'{count}:{last_time}')
        return count

img, thumb, desc, add_to_bag = None, None, None, None

SKILL_NAMES = {
    'acrobatics': 'Acrobatics',
    'animalhandling': 'Animal Handling',
    'arcana': 'Arcana',
    'athletics': 'Athletics',
    'deception': 'Deception',
    'history': 'History',
    'insight': 'Insight',
    'intimidation': 'Intimidation',
    'investigation': 'Investigation',
    'medicine': 'Medicine',
    'nature': 'Nature',
    'perception': 'Perception',
    'performance': 'Performance',
    'persuasion': 'Persuasion',
    'religion': 'Religion',
    'sleightofhand': 'Sleight of Hand',
    'stealth': 'Stealth',
    'survival': 'Survival'
}

IMAGES = [
    'https://cdn.discordapp.com/attachments/855908840633270282/943171024457961552/road10.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171024650924135/road9.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171024948699166/road8.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171025221341214/road7.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171025460424714/road6.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171025686913044/road5.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171025988898877/road4.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171026274095164/road3.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171026576105542/road2.jpg',
    'https://cdn.discordapp.com/attachments/855908840633270282/943171026827751434/road1.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942986378113863771/R_8.jpeg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942986378319364096/R_9.jpeg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942986378663329883/6fd62a650d4ea59093507be4ce395c25.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942896668297265193/b684bfbbeaa8e5e456d48a8af81d1fdd.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942872560616505344/92c321da13c4e3c78f48b9a3fd52ae00.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942872237587984424/caravan.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942872229430063204/0a5818cf6057cd6f429b456b106643ac.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942872220064178226/roadside.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/942871681607819314/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxH5rd9eDAjcFyv45SRYAFMIcKL_PArgVSL403ulRUWEndVKv-j56FBw07JgIA57ykfVI2h6rMIG1Hv9nhwoKPw_P3Y7-Al28G7pZz2byS9Iisihq-uxRQO4VLoQ2.jpeg'
]

DEATH_IMAGES = [
    'https://cdn.discordapp.com/attachments/936730897619771432/943172700740911184/dwarf-death-777x437.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/943172700740911184/dwarf-death-777x437.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/943172700740911184/dwarf-death-777x437.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/943172701269409842/jsdsgr0dp4c01.jpg',
    'https://cdn.discordapp.com/attachments/936730897619771432/943173059790135296/R_10.jpeg'
]

FOOTER_MORE_MSG = "You can still come across another rumor today."
FOOTER_DONE_MSG = "Come back tomorrow for another rumor!"

img = IMAGES[roll(f'1d{len(IMAGES)}') - 1]

ADMIN_USER_IDS = [771997367611949076]
if get_svar('SEVENTRA_ALIAS_ADMINS') != None:
    admin_ids = load_json(get_svar('SEVENTRA_ALIAS_ADMINS'))
    ADMIN_USER_IDS += admin_ids

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
cv  = c.cvars
cs = c.skills

title = f'{c.name} hears the many rumors that spread through Seventra...'
sl, fl = "**Success!**", "**Failure!**"
fields = []

RUMOR_SEEN_VAR = "_sj_r_his_"
RUMOR_TIME_VAR = "_sj_r_dhc_"

daily_data = get_daily_activity_data(RUMOR_TIME_VAR, DAILY_CAP)
rumors_performed = daily_data["count"]
wait_time = daily_data["wait_time"]

footer = "Don't forget to role-play about the rumors you hear!"
footer += '\n' + FOOTER_MORE_MSG if rumors_performed < DAILY_CAP else '\n' + FOOTER_DONE_MSG
footer += "\n" + f'Seventra: Exodus of Heroes | Road Rumors v{VERSION} | !rumor help'
footer += "\nCreators: Library Fox#0895 and quiversong#2772"

if len(args) > 0 and args[0] == 'reset':
    if not ctx.author.id in ADMIN_USER_IDS:
        err('You are not allowed to do that!')
        return 1
    c.delete_cvar(RUMOR_TIME_VAR)
    fields.append('Resetting rumor time control...|Done!')
    return 1

if len(args) > 0 and args[0] == 'resetlog':
    if not ctx.author.id in ADMIN_USER_IDS:
        err('You are not allowed to do that!')
        return 1
    c.delete_cvar(RUMOR_SEEN_VAR)
    fields.append('Resetting rumor history log...|Done!')
    return 1

all_rumors = load_json(get_gvar(DATA_VAR_1))["rumors"]
all_rumors = all_rumors + load_json(get_gvar(DATA_VAR_2))["rumors"]

if len(args) == 0:
    desc = '*Looking for a small side-job while on the road?*'
    desc += '\n*Use `!rumor start`!*'
    return ''

if not(args[0].lower() == 'start'):
    title = 'Rumors on the Roads!'

    desc = 'You are likely to see all manner of curious sights, and hear a wide variety of fascinating rumors while traveling on the roads and through the smaller communities of Seventra.'
    desc += '\n\nFor an adventurer like you, work is never far from your ears, and the people of the land will often seek traveler\\\'s aid with situations both big and small.'
    desc += '\n\nYou can earn a pretty handful of gold while traveling on the road, but do so carefully, for the wilds of Seventra are sure to hold danger!'

    f = 'How to?|'
    f += 'Use `!rumor start` to randomly generate a rumor or situation along the road where you can get involved. A skill check will be chosen at random, and tested against a pair of DCs to see how well you do.'
    f += '\n\nIf you fail, you will get hurt.'
    f += '\nIf you pass the first DC, you will not get hurt.'
    f += '\nIf you wholey succeed, you will earn a cash prize for your superb skills!'

    f += '\n\nIn the event that the rumor side job reduces you to 0 HP, you will be immediately returned to the kingdom you last departed.'

    f += '\n\nThis sidejob can be done as well as Downtime, Hunt, Fish, and Research, but you can only choose ONE sidejob each day. Sidejobs are activities exclusive to certain areas in Seventra. When traveling on the roads, you may roll on the Rumor sidejob wheel twice per day.'
    fields.append(f)

    f = 'Attention!|'
    f += '\n\nGold will be automatically added to your bag, and health will be automatically subtracted from your sheet. Please keep this in mind if you\\\'re on a quest, as you don\\\'t want your main instance losing HP unnecessarily, nor do you want your arena clone collecting your gold. If you have any questions, please ping `@Guide`.'
    fields.append(f)

    f = 'Disclaimer|'
    f += 'Some scenarios may require a bit of suspension of disbelief.\n'
    f += 'For example: a flying character failing to climb a tower, A warforged eating and getting an upset stomach, or other instances of acting somewhat out of character.'

    f += '\n\nDon\\\'t forget to RP your interactions!'
    fields.append(f)

    return ''

if rumors_performed >= DAILY_CAP:
    f = 'You alredy heard a rumor today...|'
    f += f'Come back tomorrow?! Time to reset: {wait_time}'
    img = None
    fields.append(f)
    return 1

rumors_seen = load_json(cv[RUMOR_SEEN_VAR]) if RUMOR_SEEN_VAR in cv else []
if len(rumors_seen) == len(all_rumors):
    rumors_seen = []

eligible_rumors = [r for r in all_rumors if r['id'] not in rumors_seen]
the_rumor = eligible_rumors[roll(f'1d{len(eligible_rumors)}') - 1]

rumors_seen.append(the_rumor['id'])
character().set_cvar(RUMOR_SEEN_VAR, dump_json(rumors_seen))

rumor_type_code = the_rumor['type'].lower().split(' ')[0]
skill = [s for s in character().skills if s[0].startswith(rumor_type_code)]
if len(skill) == 0:
    fields.append('Oops! An unexpected error ocurred!|Please let Administrators know.\n(Unknown Rumor Type)' + '\n' + the_rumor['type'])
    return 1

skill_name = SKILL_NAMES[skill[0][0].lower().replace(' ', '')]
skill = skill[0][1]
skill_roll = vroll(skill.d20(base_adv = None))

rumor_text = the_rumor['rumor'].strip().replace('"', '\\\"')
desc = f'*{rumor_text}*'

f = f'Rumor type: {skill_name}|**Skill Check:** {skill_roll.full}'
fields.append(f)

is_failure = skill_roll.total < the_rumor['dc1']
is_success = skill_roll.total >= the_rumor['dc2']
result = the_rumor['fail'] if is_failure else the_rumor['pass'] if is_success else the_rumor['passfail']
result = result.strip().replace('"', '\\\"')

fields.append(f'Conclusion...|*{result}*')

if is_failure:
    penalty = int(the_rumor['penalty'].lower().replace('hp', ''))
    character().modify_hp(-1 * penalty)
    f = f'You lost {penalty} hit points!|'

    if character().hp <= 0:
        f += '*Oh, no! It looks like you\\\'ve been dropped to 0 hit points!*'
        f += '\n\n*The perils of the road have reduced you to an exhausted, beaten mess. Fortunately, a good samaritan such as a fellow hero, highway patrolman, or a common traveler may assist you in limping back to the closest city.*'
        img = DEATH_IMAGES[roll(f'1d{len(DEATH_IMAGES)}') - 1]
    else:
        f += '*Better be more careful!*'
    fields.append(f)

if is_success:
    payout = int(the_rumor['payout'].lower().replace('gp', ''))
    add_coins({'gp': payout})
    fields.append(f'You gained {payout} gold coins!|*They have been added to your bag.*')

rumors_performed = increase_daily_activity_data(RUMOR_TIME_VAR)

if rumors_performed >= DAILY_CAP:
    footer = footer.replace(FOOTER_MORE_MSG, FOOTER_DONE_MSG)

</drac2>
-title "{{title}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-desc "{desc}"' if desc else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
{{''.join(['-f "' + field + '"\n' for field in fields]) if len(fields) > 0 else ''}}
