embed
<drac2>
# Configuration Variables
VERSION = '1.0.1'

using(utils = "efdbdcfa-1fe0-4976-bde0-04c368545d3d")

DATA_VAR = "6f5df807-0561-45dd-b303-3f1b61bc6a2f"
IMAGES_VAR = "534109e4-0224-478d-9d04-a84980550c4c"

HARVEST_TIME_VAR = "_hhmt_dhc_"
HARVEST_CONTROL_VAR = "_hhmt_ivc_"

control_var_values = utils.get_control_variable_values(HARVEST_CONTROL_VAR)
daily_cap = int(control_var_values[0]) if len(control_var_values) > 0 else 1

def is_matching_entry(entry, dice_roll):
    is_range = len(entry['roll']) > 1
    e_roll = entry['roll']
    return (not(is_range) and dice_roll == e_roll[0]) or (is_range and dice_roll >= e_roll[0] and dice_roll <= e_roll[1])

img, thumb, desc, add_to_bag = None, None, None, None

FOOTER_MORE_MSG = "You can still harvest more today."
FOOTER_DONE_MSG = "Come back tomorrow for more harvesting!"

ADMIN_USER_IDS = [771997367611949076]
if get_svar('SEVENTRA_ALIAS_ADMINS') != None:
    admin_ids = load_json(get_svar('SEVENTRA_ALIAS_ADMINS'))
    ADMIN_USER_IDS += admin_ids

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
cv, cs = c.cvars, c.skills

title = f"{c.name}'s harvesting at the Hollow Mountain!"
fields = []

daily_data = utils.get_daily_activity_data(HARVEST_TIME_VAR, daily_cap)
harvests_performed = daily_data["count"]
wait_time = daily_data["wait_time"]

footer = "Don't forget to role-play your harvest work!"
footer += '\n' + FOOTER_MORE_MSG if harvests_performed < daily_cap else '\n' + FOOTER_DONE_MSG
footer += "\n" + f'Seventra: Exodus of Heroes | Harvest Hollow v{VERSION}'
footer += "\nCreators: Library Fox#0895 and quiversong#2772"

HELP_IMG = "https://cdn.discordapp.com/attachments/940301218268479498/988871101515972619/Herbalist_With_Horns.jpg"
img = HELP_IMG

if len(args)> 0 and args[0].lower() == 'help':
    title = 'Harvest Hollow Mountain Botanical Gardens'
    desc = 'Adventurous travelers with an interest in nature can volunteer beneath the mountain...\n\nOnce per day, you can run `!harvest` to automatically roll 1d100 and volunteer to help Katnia by gathering resources from her garden! Will you find valuable ingredients within the flourishing folds of Hollow Mountain, or will you fall prey to the magical garden\'s curious and intoxicating effects?'
    fields.append('How to|Use `!harvest` to see the results. You can use `!harvest adv` or `!harvest dis` if and only if there is some effect to either grant you advantage or disadvantage. If you have any questions, ping `@Guide`!')
    fields.append('Disclaimer|All random effects bestowed by the garden are temporary, and intended for RP purposes only. Negate them at your convenience.')
    return 0

if len(args) > 0 and args[0] == 'reset':
    if not ctx.author.id in ADMIN_USER_IDS:
        err('You are not allowed to do that!')
        return 1
    c.delete_cvar(HARVEST_TIME_VAR)
    c.delete_cvar(HARVEST_CONTROL_VAR)
    fields.append('Resetting harvest time control...|Done!')
    return 1

if harvests_performed >= daily_cap:
    f = 'You have alredy harvested today...|'
    f += f'Come back tomorrow?! Time to reset: {wait_time}'
    img = None
    fields.append(f)
    return 1

entries = load_json(get_gvar(DATA_VAR))["entries"]
images = load_json(get_gvar(IMAGES_VAR))["images"]
dice_roll = vroll('2d100kh1' if 'adv' in args else '2d100kl1' if 'dis' in args else '1d100')
result = ([x for x in entries if is_matching_entry(x, dice_roll.total)] + [None])[0]

if result == None:
    fields.append('Sorry, but an unexpected error has occurred! Please contact `@Dragonspeaker`!')
    return 1

desc = "*You feel a sudden call to nature being carried along the chilling winds of Snowcrest. Eager to see what the Hollow Mountain Botanical Garden has in store, you head to the homely entrance at base of Mount Angrav, and volunteer to assist the garden's caretaker, Katnia Fellhammer!*"

fields.append(f"Dice Roll...|{dice_roll.full}")

text = result['text'].replace('"', '\\\"')
fields.append(f'Outcome|{text}')

img_selection = [x for x in images if x["image_label"].lower() == result['image'].lower()]
img = img_selection[0]["image_url"] if len(img_selection) > 0 else HELP_IMG

prize = result["prize"].lower()
if prize != "0":
    if prize.endswith('gp'):
        prize = int(prize.split('gp')[0])
        utils.add_coins({'gp': prize})
        fields.append(f"Congratulations!|{prize} gold pieces have been added to your pouch!")
    else:
        fields.append(f"Congratulations!|You gained {prize}!")

if dice_roll.total == 100 and daily_cap == 1:
    utils.update_control_variable(HARVEST_CONTROL_VAR, 0, 2)
    fields.append(f"Today is your lucky day!|From now on you get to try to `!harvest` twice every day.\nGo for it again!")

harvests_performed = utils.increase_daily_activity_data(HARVEST_TIME_VAR)
if harvests_performed >= daily_cap:
    footer = footer.replace(FOOTER_MORE_MSG, FOOTER_DONE_MSG)

</drac2>
-title "{{title}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-desc "{desc}"' if desc else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
{{''.join(['-f "' + field + '"\n' for field in fields]) if len(fields) > 0 else ''}}
