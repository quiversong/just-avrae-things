embed
<drac2>
# Configuration Variables
VERSION = '1.1'

using(utils = "efdbdcfa-1fe0-4976-bde0-04c368545d3d")

DATA_VAR = "95611e59-99f0-4dfe-bc4e-9d72472a1e9b"
DAILY_CAP = 2

TIME_VAR = "_nsfr_dhc_"
STATS_VAR = "_nsfr_st_"

def get_beast_data(all_beasts, beast_code):
    beast = ([b for b in all_beasts if b['code'].lower() == beast_code] + [None])[0]
    return None if beast == None else {
        'code': beast["code"],
        'name': beast["name"].replace('"', '\\\"'),
        'habitat': beast["habitat"].replace('"', '\\\"'),
        'desc': beast["desc"].replace('"', '\\\"'),
        'habitat_dc': beast["habitat_dc"],
        'stealth_dc': beast["stealth_dc"],
        'ac': beast["ac"],
        'img': beast["img"],
        'rewards': beast["rewards"],
        'uniqueRewards': beast['uniqueRewards'],
        'unlocks': [u.strip() for u in beast['unlocks'].split(',')] if beast['unlocks'].strip() != '' else [],
        'props': [u.strip() for u in beast['props'].split(',')] if beast['props'].strip() != '' else []
    }

def add_reward(reward, qty):
    raw = reward.lower().strip()
    if raw in ['cp', 'sp', 'gp', 'ep', 'pp']:
        utils.add_coins({ reward: qty })
    elif raw == 'inspiration':
        utils.add_inspiration()
    elif raw.endswith(' bead') and not raw.endswith('journal bead'):
        return utils.add_vsheet_feature_if_not_existent("safaribeads", "Green Vale Safari Beads", reward.strip())
    elif 'xp' in raw and 'ping' in raw:
        return True
    else:
        utils.add_to_bag('Safari', { reward: qty })
    return True

def add_and_format_rewards(title, rewards):
    formatted = title
    for reward_item in rewards.items():
        reward, qty = reward_item[0], reward_item[1]
        item_added = add_reward(reward, qty)
        if item_added:
            fqty = str(qty) if qty > 9 else f' {qty}'
            formatted += f'`{fqty}x {reward}`\n'
    return formatted

def convert_stats(stats, stats_var):
    keys = list(stats.keys())
    if 'capt' in stats[keys[0]]:
        return stats
    new_stats = {}
    for key in keys:
        new_stats[key] = get_stats_template()
        new_stats[key]['capt'] = stats[key]['captures']
        new_stats[key]['fail'] = stats[key]['failures']
        new_stats[key]['nature_s'] = stats[key]['nature_successes']
        new_stats[key]['percept_s'] = stats[key]['perception_successes']
        new_stats[key]['attack_s'] = stats[key]['attack_successes']
    character().set_cvar(stats_var, dump_json(new_stats))
    return new_stats


def get_stats_template():
    return {
        'capt': 0,
        'fail': 0,
        'nature_s': 0,
        'percept_s': 0,
        'attack_s': 0
    }


ADMIN_USER_IDS = [771997367611949076]
if get_svar('SEVENTRA_ALIAS_ADMINS') != None:
    admin_ids = load_json(get_svar('SEVENTRA_ALIAS_ADMINS'))
    ADMIN_USER_IDS += admin_ids

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
c_first_name = c.name.split(' ')[0]
cv, cs = c.cvars, c.skills

title = f'{c_first_name} arrives at the Green Vale Zoology Safari!'
img, thumb, desc = None, None, None
items_to_add = {}

sl, fl = "**Success!**", "**Failure!**"
fields = []
commands = []

SAFARI_ICON = 'https://cdn.discordapp.com/attachments/855908840633270282/1016422111365046332/8b4f7cf7629cb03a44c4d7a659acdedf.jpeg'

daily_data = utils.get_daily_activity_data(TIME_VAR, DAILY_CAP)
activity_count = daily_data["count"]
wait_time = daily_data["wait_time"]

footer = "Don't forget to role-play your safari expedition!"
footer += f" Attempts remaining today: {DAILY_CAP - activity_count}"
footer += "\n" + f'Seventra: Exodus of Heroes | Nephix Safari v{VERSION} | !safari help'
footer += "\nCreators: Library Fox#0895 and quiversong#2772"

if len(args) > 0 and args[0] == 'reset':
    if not ctx.author.id in ADMIN_USER_IDS:
        err('You are not allowed to do that!')
        return 1
    c.delete_cvar(TIME_VAR)
    fields.append('Resetting safari time control...|Done!')
    return 1

if len(args) > 0 and args[0] == 'resetlog':
    if not ctx.author.id in ADMIN_USER_IDS:
        err('You are not allowed to do that!')
        return 1
    c.delete_cvar(STATS_VAR)
    fields.append('Resetting safari progress and log...|Done!')
    return 1

all_beasts = load_json(get_gvar(DATA_VAR))["beasts"]
global_stats = load_json(cv[STATS_VAR]) if STATS_VAR in cv else {}
global_stats = convert_stats(global_stats, STATS_VAR)

if len(args) >= 2 and args[0] == 'desc':
    title = 'Nephix Safari Beasts'
    beast = get_beast_data(all_beasts, args[1])
    if beast == None:
        fields.append(f'Please check again!|There are no beasts available in the safari with codename {args[1]}')
        return 1
    img = beast["img"]
    thumb = SAFARI_ICON
    title += f': {beast["name"]}'
    fields.append(f'Habitat|{beast["habitat"]}')
    fields.append(f'Description|{beast["desc"]}')
    return 0

if len(args) > 0 and args[0] == 'list':
    title = f"{character().name}'s Safari Research Results"
    thumb = SAFARI_ICON

    f = 'Safari Results|'
    f += 'The list below contains the names of the beasts you are allowed to attempt to capture.\n'
    f += '\nCapturing new beasts may unlock new creatures and habitats!\n'
    f += '\n`W/R` = wins / total attempts.\n\n'

    header = ['CODE', 'W/R']
    data_per_habitat = {}
    habitats = []
    for beast in all_beasts:
        if 'starter' in beast['props'] or beast['code'] in global_stats:
            habitat = beast['habitat'].strip()
            habitats.append(habitat) if not habitat in habitats else None
            stats = global_stats[beast['code']] if beast['code'] in global_stats else get_stats_template()
            if not habitat in data_per_habitat:
                data_per_habitat[habitat] = []
            data_per_habitat[habitat].append([beast['code'], f"{stats['capt']}/{stats['fail']}"])

    habitats.sort()
    for habitat in habitats:
        table_title = f"__***{habitat} Creature Results***__"
        table_fields = utils.print_table([header] + data_per_habitat[habitat], table_title, None, [19, 4])
        [fields.append(field) for field in table_fields]

    return 0

if len(args) < 2:
    thumb = SAFARI_ICON

    f = f'{c_first_name} arrives at the Safari in Nephix...|'
    f += '- To ask Boza or Prathus about a creature:\n`!safari desc <beast code>`'
    f += '\n- To view the beasts you are able to attempt to capture:\n`!safari list`'
    f += '\n- To attempt to capture a beast:\n`!safari <beast code> <your attack/weapon of choice>`'
    f += '\n- To view the attacks/weapons you can use:\n`!attack`'
    f += '\n\nAll rewards are automatically added to your Coin Pouch or Safari bag.'
    f += ' Some special rewards may be handled differently. Example:'
    f += '\n- Inspiration is added as a cc and can be used with the `insp` snippet when appropriate'
    fields.append(f)
    return 0

if activity_count >= DAILY_CAP:
    f = 'It looks like Prathus Dawnroar is busy doing research!|'
    f += 'They will be back tomorrow to help hunters to visit the special habitats. Come back then for more attempts at capturing the Safari beasts!'
    fields.append(f)
    return 1

beast_code = args[0].lower().strip()
beast = get_beast_data(all_beasts, beast_code)
if beast == None:
    if beast_code in global_stats:
        fields.append(f'Oops! This beast is still not ready to accept challenges!|Blame it on the Seventra staff! They are still working on it. :)')
    else:
        fields.append(f'{c_first_name} seems a little confused...|There are no beasts with codename {beast_code} available in the Safari for you.\nUse `!safari list` to see the beasts you can try to capture!')
    return 1

if not('starter' in beast['props'] or beast['code'] in global_stats):
    fields.append(f'{c_first_name} is not ready yet...|You need to prove your abilities by capturing other beasts before you can go on a safari for for {beast["name"]}!\nUse `!safari list` to see the beasts that are available for you!')
    return 1


weapon = utils.get_pc_weapon(args[1].lower())
if weapon == None:
    fields.append(f'{c_first_name} seems a little confused...|I could not find any attacks matching `{args[1]}`!')
    return 1

########### SAFARI ROLLS ###########

nature_roll = vroll(cs.nature.d20())
nature_success = nature_roll.result.crit == 1 or nature_roll.total >= beast["habitat_dc"]
perception_adv = True if nature_success else None
perception_roll = vroll(cs.perception.d20(base_adv = perception_adv))
perception_success = perception_roll.result.crit == 1 or perception_roll.total >= beast["stealth_dc"]
base_attack_die = '1d20' if perception_success else '2d20kl1'
misc_roll = ([f' - {p.split("_")[2]}' for p in beast['props'] if p.lower().strip().startswith('attack_penalty_')] + [''])[0]
misc_roll = '' if perception_success else misc_roll
attack_roll = vroll(f'{base_attack_die} + {weapon["a_bonus"]}{misc_roll}')
attack_success = attack_roll.result.crit == 1 or attack_roll.total >= beast["ac"]
safari_success = attack_success

########### MOUNT EMBED ###########
aan = 'an ' if beast["name"].strip().lower()[0] in 'aeiou' else 'a '
title = f'{c_first_name} tries to capture {aan}{beast["name"]}!'
desc = f'*Using their {weapon["name"]}, they explore the {beast["habitat"]} region!*'

f = "*The challenger activates their Safari Bracelet to be transported to the creature's habitat...*|"
f += f'*Will {c_first_name} display the hunting skills necessary to capture the prey?*'
fields.append(f)

if beast["desc"].strip() != '':
    f = f'*Today {c_first_name} is hunting {aan}{beast["name"]}...*|```{beast["desc"]}```'
    fields.append(f)

nature_success_text = f"{c_first_name} navigates this habitat like a native!"
nature_failure_text = f"{c_first_name} has a hard time navigating the surroundings.."
f = "__*Environment Adaptation...*__|"
f += f"Nature check: {sl if nature_success else fl}\n{nature_roll.full}\n"
f += nature_success_text if nature_success else nature_failure_text
fields.append(f)

perception_success_text = f"{c_first_name} quickly finds the {beast['name']}, but can they capture it?!"
perception_failure_text = f"{c_first_name} can't seem to find the {beast['name']}!"
f = "__*Prey detection...*__|"
f += f"Perception check: {sl if perception_success else fl}\n{perception_roll.full}\n"
f += perception_success_text if perception_success else perception_failure_text
fields.append(f)

attack_success_text = f"{c_first_name} successfuly captures the {beast['name']}!" if perception_success else \
        f"{beast['name']} gets the jump on {c_first_name}, but they still capture the beast against all odds!"
attack_failure_text = f"The {beast['name']} is too quick for {c_first_name} to be able to capture it, and time runs out!" if perception_success else \
        f"{beast['name']} gets the jump on {c_first_name} and pins them down!"
f = "__*Capture attempt...*__|"
f += f"Attack roll: {sl if attack_success else fl}\n{attack_roll.full}\n"
f += attack_success_text if attack_success else attack_failure_text
fields.append(f)

if not beast['code'] in global_stats:
    global_stats[beast['code']] = get_stats_template().copy()
stats = global_stats[beast['code']]

img = beast['img']
thumb = image

if safari_success:
    stats['capt'] += 1
    stats['nature_s'] += 1 if nature_success else 0
    stats['percept_s'] += 1 if perception_success else 0
    stats['attack_s'] += 1 if attack_success else 0

    f = f'__***{c.name.upper()} WINS!***__|'
    f += f'Congratulations! You have successfully captured the {beast["name"]}!'
    fields.append(f)

    if 'unlocks' in beast and len(beast['unlocks']) > 0:
        unlocked_codes = []
        for unlocked_code in beast['unlocks']:
            should_add = not unlocked_code in global_stats
            if should_add:
                unlocked_beast = get_beast_data(all_beasts, unlocked_code)
                if unlocked_beast == None:
                    err(f"Could not find matching beast to unlock. This is an alias internal error. Please contact the server's Dragonspeakers.\n`Beast code: {beast['code']}`")
                unlocked_codes.append(f'* `{unlocked_code}`: {unlocked_beast["name"]} @ the {unlocked_beast["habitat"]}.')
                global_stats[unlocked_code] = get_stats_template().copy()

        if len(unlocked_codes) > 0:
            f = 'You can now attempt to capture new beasts!|'
            f += '\n'.join(unlocked_codes) + '\n\n'
            fields.append(f)

    f = add_and_format_rewards('You gained these rewards:|\n', beast['rewards'])
    fields.append(f)

    if stats['capt'] == 1:
        f = add_and_format_rewards('You also gained these one-time rewards:|\n', beast['uniqueRewards'])
        fields.append(f)
else:
    f = f'__***THE {beast["name"].upper()} ESCAPES!***__|'
    f += 'Better luck next time!'
    fields.append(f)

    stats['fail'] += 1

footer = footer.replace(f'remaining today: {DAILY_CAP - activity_count}', f'remaining today: {DAILY_CAP - (activity_count + 1)}')

global_stats[beast['code']] = stats
character().set_cvar(STATS_VAR, dump_json(global_stats))

utils.increase_daily_activity_data(TIME_VAR)
</drac2>
-title "{{title}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-desc "{desc}"' if desc else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
{{''.join(['-f "' + field + '"\n' for field in fields]) if len(fields) > 0 else ''}}

