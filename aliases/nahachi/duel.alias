multiline
<drac2>
# Configuration Variables
VERSION = '0.1'

DATA_VAR = "c85742dc-f2e9-4a99-b544-b8f71dd7bed9"
DAILY_CAP = 1
BLOWS_NEEDED = 2

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
c_first_name = c.name.split(' ')[0]
cv, cs = c.cvars, c.skills

title = f'{c_first_name} wants to challenge the warriors of the Kaizen Temple for a duel!'
img, thumb = None, None
sl, fl = "**Success!**", "**Failure!**"
fields = []
commands = []

DUEL_TIME_VAR = "_du_dhc_"
DUEL_STAGE_VAR = "_du_vars"
DUEL_STATS_VAR = "_du_st_"

daily_activity_control = None
#! daily_activity_control = devrae_f daily_control_init(#P DUEL_TIME_VAR #P DAILY_CAP) !#
##### devrae function insert [daily_control_init] #####
daily_activity_control = None
__p0__ = DUEL_TIME_VAR
__p1__ = DAILY_CAP
# returns current counter and wait time text if any
_var_name = __p0__
_daily_limit = __p1__
_cvars = character().cvars

_now = time()
if _var_name not in _cvars:
  __result__ = { "count": 0, "wait_time": None }
  character().set_cvar(_var_name, f"0:0")
else:
  _var_parts = _cvars[_var_name].split(':')
  _count = int(_var_parts[0])
  _first_time = float(_var_parts[1])
  _wait_time = None
  _is_next_day = False

  if _count > 0 and _first_time != None:
    _passed_in_day_since_first_time = _first_time % 86400
    _next_midnight_after_first_time = _first_time + (86400 - _passed_in_day_since_first_time)
    if _now > _next_midnight_after_first_time:
      _is_next_day = True
    elif _count >= _daily_limit:
      _wait_time = _next_midnight_after_first_time - _now
      _hours = floor(_wait_time / 3600)
      _minutes = 0
      if _hours == 0:
        _minutes = ceil(_wait_time / 60)
      else:
        _minutes = ceil((_wait_time % 3600) / 60)
      _wait_text = (str(_hours) + ' hours and ' if _hours > 0 else '') + str(_minutes) + ' minutes'

  if _is_next_day:
    _count = 0
    __result__ = { "count": _count, "wait_time": None }
    character().set_cvar(_var_name, f"0:0")
  elif _count < _daily_limit:
    __result__ = { "count": _count, "wait_time": None }
  else:
    __result__ = { "count": _count, "wait_time": _wait_text }

daily_activity_control = __result__
##### devrae function end [daily_control_init] #####
research_count = daily_activity_control["count"]
wait_time = daily_activity_control["wait_time"]

footer = "Don't forget to role-play your duel!\n"
footer += "\n" + f'Seventra: Exodus of Heroes | Nahachi Duel v{VERSION} | !duel help'
footer += "\nCreators: quiversong#2772"

all_warriors = load_json(get_gvar(DATA_VAR))["warriors"]
warrior = None
warrior_will_attack = False

if len(args) < 2:
    f = f'{c_first_name} seems a little confused...|'
    f += '- To start a challenge:\n Use `!duel <warrior you want to challenge> <attack you want to use>`\n'
    f += '- To view the warriors you can challenge:\n Use `!duel list`\n'
    f += '- To view the attacks you can use:\n Use `!a`'
    fields.append(f)
    return f'!embed -title "{title}" ' + ''.join(['-f "' + field.replace('"', '\"') + '"' for field in fields])

chosen_warrior_name = args[0].lower().strip()
warrior = [w for w in all_warriors if w["code"].lower() == chosen_warrior_name]
if len(warrior) == 0:
    fields.append(f'{c_first_name} seems a little confused...|There are no warriors named {args[1]} available to duel with you.')
    return f'!embed -title "{title}" ' + ''.join(['-f "' + field.replace('"', '\"') + '"' for field in fields])

warrior = warrior[0]
warrior_name = warrior["name"]

weapon = None
weapon_arg = args[1].lower()
weapon_str = [a for a in c.attacks
  if str(a).lower().split(':')[0].strip().replace('*', '').startswith(weapon_arg)
]

if len(weapon_str) > 0:
    weapon_str = str(weapon_str[0])
    weapon = {
      'name': weapon_str.split(':')[0].strip(),
      'a_bonus': int(weapon_str.split('Attack:')[1].strip().split(' ')[0])
    }
else:
    fields.append(f'{c_first_name} seems a little confused...|I could not find any attacks matching `{args[1]}`!')
    return f'!embed -title "{title}" ' + ''.join(['-f "' + field.replace('"', '\"') + '"' for field in fields])

player_init_roll = vroll(cs.initiative.d20())
warrior_init_roll = vroll(f'1d20 + {warrior["init"]}')

player_goes_fist = player_init_roll.total > warrior_init_roll.total
if player_init_roll.total == warrior_init_roll.total:
    player_goes_fist = dexterityMod > warrior["init"]

player_hits = 0
warrior_hits = 0
hits = []

is_player_turn = player_goes_fist

while player_hits < BLOWS_NEEDED and warrior_hits < BLOWS_NEEDED:
    if is_player_turn:
        attack_roll = vroll(f'1d20 + {weapon["a_bonus"]}')
        crit = attack_roll.result.crit == 1

        attack_successful = crit or attack_roll.total >= warrior["ac"]
        player_hits += 1 if attack_successful else 0

        is_player_turn = False
        hits.append({
            'type': 'player',
            'roll': attack_roll,
            'successful': attack_successful
        })
    else:
        attack_roll = vroll(f'1d20 + {warrior["attack"]}')
        crit = attack_roll.result.crit == 1

        attack_successful = crit or attack_roll.total >= character().ac
        warrior_hits += 1 if attack_successful else 0

        is_player_turn = True
        hits.append({
            'type': 'warrior',
            'roll': attack_roll,
            'successful': attack_successful
        })

f = ''
if player_goes_fist:
    f += f'{c_first_name} takes the initiative and makes the first move!|'
    thumb = image
else:
    f += f'{c_first_name} is caught off-guard and {warrior_name} makes the first move!|'
    thumb = warrior["image"]
f += '**Initiative:**\n'
f += f'{c_first_name}: {player_init_roll.full}\n'
f += f'{warrior_name}: {warrior_init_roll.full}'
fields.append(f)

commands.append(f'!embed -title "{title}" ' + \
        (f'-thumb {thumb} ' if thumb != None else '') + \
        ''.join(['-f "' + field.replace('"', '\"') + '"' for field in fields]))

fields = []
title = f'{c_first_name} and {warrior_name} duel at the Nahachi Kaizen Temple!'
for index, hit in enumerate(hits):
    is_last_hit = (index == len(hits) - 1)

    if hit['type'] == 'player':
        if is_last_hit:
            thumb = image
            f = f'{c_first_name} lands the third and final blow and wins!'
            f += f'...after landing the third successful blow on {warrior_name}'
            if warrior_hits == 0:
                f += '\nFlawless victory!'
            fields.append(f)
        else:
            f = f'{c_first_name} attacks with their {weapon["name"]}!'
            fields.append(f)

        f = f'{c_first_name} attack roll|{hit["roll"].full}\n'
        f += sl if hit['successful'] else fl
        fields.append(f)
    else:
        if is_last_hit:
            thumb = warrior['image'] if warrior['image'] != '' else None
            f = f'{warrior_name} lands the third and final blow and wins!'
            f += f'...after landing the third successful blow on {c_first_name}'
            if player_hits == 0:
                f += '\nFlawless victory!'
            if 'victory_action' in warrior and warrior['victory_action'] != '':
                f += f'\n\n{warrior["victory_action"]}'
            fields.append(f)
        else:
            f = f"{warrior['name']} attacks with their {warrior['weapon']}!|"
            f += f'Attack result...\n' + (sl if hit["successful"] else fl)
            fields.append(f)

commands.append(f'!embed -title "{title}" ' + \
        (f'-thumb {thumb} ' if thumb != None else '') + \
        ''.join(['-f "' + field.replace('"', '\"') + '"' for field in fields]))

return '\n'.join(commands)
</drac2>
