embed
<drac2>
# Configuration Variables
VERSION = '0.1'

DATA_VAR = "c85742dc-f2e9-4a99-b544-b8f71dd7bed9"
DAILY_CAP = 1
BLOWS_NEEDED = 3

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
c_first_name = c.name.split(' ')[0]
cv, cs = c.cvars, c.skills

title = f'{c_first_name} wants to challenge the warriors of the Kaizen Temple for a duel!'
img, thumb = None, None
sl, fl = "**Success!**", "**Failure!**"
fields = []
commands = []

DUEL_TIME_VAR = "_du_dhc_"
DUEL_STAGE_VAR = "_du_vars"
DUEL_STATS_VAR = "_du_st_"

daily_activity_control = None
#! daily_activity_control = devrae_f daily_control_init(#P DUEL_TIME_VAR #P DAILY_CAP) !#
##### devrae function insert [daily_control_init] #####
daily_activity_control = None
__p0__ = DUEL_TIME_VAR
__p1__ = DAILY_CAP
# returns current counter and wait time text if any
_var_name = __p0__
_daily_limit = __p1__
_cvars = character().cvars

_now = time()
if _var_name not in _cvars:
  __result__ = { "count": 0, "wait_time": None }
  character().set_cvar(_var_name, f"0:0")
else:
  _var_parts = _cvars[_var_name].split(':')
  _count = int(_var_parts[0])
  _first_time = float(_var_parts[1])
  _wait_time = None
  _is_next_day = False

  if _count > 0 and _first_time != None:
    _passed_in_day_since_first_time = _first_time % 86400
    _next_midnight_after_first_time = _first_time + (86400 - _passed_in_day_since_first_time)
    if _now > _next_midnight_after_first_time:
      _is_next_day = True
    elif _count >= _daily_limit:
      _wait_time = _next_midnight_after_first_time - _now
      _hours = floor(_wait_time / 3600)
      _minutes = 0
      if _hours == 0:
        _minutes = ceil(_wait_time / 60)
      else:
        _minutes = ceil((_wait_time % 3600) / 60)
      _wait_text = (str(_hours) + ' hours and ' if _hours > 0 else '') + str(_minutes) + ' minutes'

  if _is_next_day:
    _count = 0
    __result__ = { "count": _count, "wait_time": None }
    character().set_cvar(_var_name, f"0:0")
  elif _count < _daily_limit:
    __result__ = { "count": _count, "wait_time": None }
  else:
    __result__ = { "count": _count, "wait_time": _wait_text }

daily_activity_control = __result__
##### devrae function end [daily_control_init] #####
research_count = daily_activity_control["count"]
wait_time = daily_activity_control["wait_time"]

footer = "Don't forget to role-play your duel!"
footer += "\n" + f'Seventra: Exodus of Heroes | Nahachi Duel v{VERSION} | !duel help'
footer += "\nCreators: quiversong#2772"

all_warriors = load_json(get_gvar(DATA_VAR))["warriors"]

if len(args) < 2:
    f = f'{c_first_name} seems a little confused...|'
    f += '- To start a challenge:\n Use `!duel <warrior you want to challenge> <attack you want to use>`\n'
    f += '- To view the warriors you can challenge:\n Use `!duel list`\n'
    f += '- To view the attacks you can use:\n Use `!a`'
    fields.append(f)
    return 1

chosen_warrior_name = args[0].lower().strip()
warrior = [w for w in all_warriors if w["code"].lower() == chosen_warrior_name]
if len(warrior) == 0:
    fields.append(f'{c_first_name} seems a little confused...|There are no warriors named {args[0]} available to duel with you.')
    return 1

warrior = warrior[0]
warrior_name = warrior["name"]

weapon = None
weapon_arg = args[1].lower()
weapon_str = [a for a in c.attacks
  if str(a).lower().split(':')[0].strip().replace('*', '').startswith(weapon_arg)
]

if len(weapon_str) > 0:
    weapon_str = str(weapon_str[0])
    weapon = {
      'name': weapon_str.split(':')[0].strip(),
      'a_bonus': int(weapon_str.split('Attack:')[1].strip().split(' ')[0])
    }
else:
    fields.append(f'{c_first_name} seems a little confused...|I could not find any attacks matching `{args[1]}`!')
    return 1

player_init_roll = vroll(cs.initiative.d20())
warrior_init_roll = vroll(f'1d20 + {warrior["init"]}')

player_goes_fist = player_init_roll.total > warrior_init_roll.total
if player_init_roll.total == warrior_init_roll.total:
    player_goes_fist = dexterityMod > warrior["init"]

player_hits = 0
warrior_hits = 0
rounds = []

is_player_turn = player_goes_fist

while player_hits < BLOWS_NEEDED and warrior_hits < BLOWS_NEEDED:
    is_new_round = (player_goes_fist and is_player_turn) or (not player_goes_fist and not is_player_turn)
    if is_new_round:
        rounds.append({})

    if is_player_turn:
        attack_roll = vroll(f'1d20 + {weapon["a_bonus"]}')
        crit = attack_roll.result.crit == 1

        attack_successful = crit or attack_roll.total >= warrior["ac"]
        player_hits += 1 if attack_successful else 0

        is_player_turn = False
        rounds[len(rounds) - 1]['player'] = [{
            'type': 'player',
            'is_player': True,
            'roll': attack_roll,
            'successful': attack_successful
        }]
    else:
        attack_roll = vroll(f'1d20 + {warrior["attack"]}')
        crit = attack_roll.result.crit == 1

        attack_successful = crit or attack_roll.total >= character().ac
        warrior_hits += 1 if attack_successful else 0

        is_player_turn = True
        rounds[len(rounds) - 1]['warrior'] = [{
            'type': 'warrior',
            'is_player': False,
            'roll': attack_roll,
            'successful': attack_successful
        }]

is_player_winner = player_hits >= BLOWS_NEEDED

img = 'https://cdn.discordapp.com/attachments/910682900863787028/910790078547230770/tumblr_c233596118d0ef2fee07434bfd216a7d_1635c08d_540.gif'
img = 'https://cdn.discordapp.com/attachments/910682900863787028/912200744822767676/photo-1595084921991_orig.png'
img = 'https://cdn.discordapp.com/attachments/910682900863787028/912201227402612736/grove.jpg'

title = f'{c_first_name} challenges {warrior_name}!'

f = 'The two duelists solemnly walk to the back of the temple...|'
f += '*They take their positions under a red maple tree, surrounded by the fallen leaves that swirl around the battlefield...*'
f += '\n\n__***INITIATIVE ROLLS***__'
fields.append(f)

f = f'{c_first_name}|{player_init_roll.full}|inline'
fields.append(f)

f = f'{warrior_name}|{warrior_init_roll.full}|inline'
fields.append(f)

f = f'{c_first_name if player_goes_fist else warrior_name} is faster and makes the first move!'
f += f'|Can {warrior_name if player_goes_fist else c_first_name} regain the upper hand?'
f += '\n\n__***ATTACK ROLLS***__'
fields.append(f)

player_attacks_field = f'{c_first_name}|'
warrior_attacks_field = f'{warrior_name}|'

player_attack_count = 0
warrior_attack_count = 0

for index in range(len(rounds)):
    this_round = rounds[index]
    player_attacks = this_round['player'] if 'player' in this_round else []
    warrior_attacks = this_round['warrior'] if 'warrior' in this_round else []

    max_attacks_this_round = len(player_attacks) if \
            len(player_attacks) >= len(warrior_attacks) else len(warrior_attacks)

    for attack in player_attacks:
        player_attack_count += 1
        player_attacks_field += f'Attack {player_attack_count}: {sl if attack["successful"] else fl}\n'
        player_attacks_field += f'{attack["roll"].full}\n\n'

    for attack in warrior_attacks:
        warrior_attack_count += 1
        warrior_attacks_field += f'Attack {warrior_attack_count}: {sl if attack["successful"] else fl}\n'
        warrior_attacks_field += f'{attack["roll"].total}`\n\n'

player_attacks_field += '|inline'
warrior_attacks_field += '|inline'

fields.append(player_attacks_field if player_goes_fist else warrior_attacks_field)
fields.append(warrior_attacks_field if player_goes_fist else player_attacks_field)

thumb = warrior['image']

if is_player_winner:
    f = f'__***{c.name.upper()} WINS!***__|'
    f += 'Flawless victory!\n' if warrior_hits == 0 else ''
    f += f'Congratulations! You earn {", ".join(warrior["rewards"])}.'
    if 'defeat_action' in warrior:
        f += '\n\n' + warrior['defeat_action'].replace('"', '\\"')
    fields.append(f)
else:
    f = f'__***{warrior_name.upper()} WINS!***__|'
    f += 'Flawless victory!\n' if player_hits == 0 else ''
    f += f'It would seem as you need more training, young grasshopper.'
    if 'victory_action' in warrior:
        f += '\n\n' + warrior['victory_action'].replace('"', '\\"')
    fields.append(f)


global_stats = load_json(get_gvar(DUEL_STATS_VAR))
stats = global_stats[warrior['code']] if warrior['code'] in stats else {
    'wins': 0,
    'losses': 0,
    'flawless_wins': 0,
    'flawless_losses': 0,
    'win_min_rounds': 0
}

if is_player_winner:
    stats['wins'] += 1
    if warrior_hits == 0:
        stats['flawless_wins'] += 1
    if len(rounds) < stats['min_rounds']:
        stats['win_min_rounds'] = len(rounds)
else:
    stats['losses'] += 1
    if player_hits == 0:
        stats['flawless_losses'] += 1

global_stats[warrior['code']] = stats
character().set_cvar(DUEL_STATS_VAR, dump_json(global_stats))

</drac2>
-title "{{title}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
{{''.join(['-f "' + field + '"\n' for field in fields]) if len(fields) > 0 else ''}}
