embed
<drac2>
# Configuration Variables
IS_LIVE = False
VERSION = '1.0'

BETA_CAT_VAR = "05788227-fe82-4006-98f2-5e9ec50d2a7e"
LIVE_CAT_VAR = "05788227-fe82-4006-98f2-5e9ec50d2a7e"

BETA_ENTRY_VAR = "1ea827c8-c2b3-4f5a-9b67-ebac9c7db1f0"
LIVE_ENTRY_VAR = "1ea827c8-c2b3-4f5a-9b67-ebac9c7db1f0"

BETA_AREAS_VAR = "a5d585d6-92d2-4961-adfa-f475f4b4d737"
LIVE_AREAS_VAR = "a5d585d6-92d2-4961-adfa-f475f4b4d737"

DAILY_CAP = 6

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
cv, cs = c.cvars, c.skills

categories_var = LIVE_CAT_VAR if IS_LIVE else BETA_CAT_VAR
entries_var = LIVE_ENTRY_VAR if IS_LIVE else BETA_ENTRY_VAR
areas_var = LIVE_AREAS_VAR if IS_LIVE else BETA_AREAS_VAR

t = f'{c.name} wants to aid The Foundation with their research!'
f, f2, f3, f4, color = None, None, None, None, 'f200ff'

img = None
thumb = None
sl, fl = "**Success!**", "**Failure!**"

R_TIME_VAR = "_r_dhc_"
R_STAGE_VAR = "_r_sc_"
R_STATS_VAR = "_r_st_"
R_AREAS_VISITED_VAR = "_r_av_"
R_IMG_VAR = "_r_img_"

daily_activity_control = None
#! daily_activity_control = devrae_f daily_control_init(#P R_TIME_VAR #P DAILY_CAP) !#
##### devrae function insert [daily_control_init] #####
daily_activity_control = None
__p0__ = R_TIME_VAR
__p1__ = DAILY_CAP
# returns current counter and wait time text if any
_var_name = __p0__
_daily_limit = __p1__
_cvars = character().cvars

_now = time()
if _var_name not in _cvars:
  __result__ = { "count": 0, "wait_time": None }
  character().set_cvar(_var_name, f"0:0")
else:
  _var_parts = _cvars[_var_name].split(':')
  _count = int(_var_parts[0])
  _first_time = float(_var_parts[1])
  _wait_time = None
  _is_next_day = False

  if _count > 0 and _first_time != None:
    _passed_in_day_since_first_time = _first_time % 86400
    _next_midnight_after_first_time = _first_time + (86400 - _passed_in_day_since_first_time)
    if _now > _next_midnight_after_first_time:
      _is_next_day = True
    elif _count >= _daily_limit:
      _wait_time = _next_midnight_after_first_time - _now
      _hours = floor(_wait_time / 3600)
      _minutes = 0
      if _hours == 0:
        _minutes = ceil(_wait_time / 60)
      else:
        _minutes = ceil((_wait_time % 3600) / 60)
      _wait_text = (str(_hours) + ' hours and ' if _hours > 0 else '') + str(_minutes) + ' minutes'

  if _is_next_day:
    _count = 0
    __result__ = { "count": _count, "wait_time": None }
    character().set_cvar(_var_name, f"0:0")
  elif _count < _daily_limit:
    __result__ = { "count": _count, "wait_time": None }
  else:
    __result__ = { "count": _count, "wait_time": _wait_text }

daily_activity_control = __result__
##### devrae function end [daily_control_init] #####
research_count = daily_activity_control["count"]
wait_time = daily_activity_control["wait_time"]

footer = "Don't forget to role-play your research!\n"
footer += f'There is a limit of {DAILY_CAP} researches per day. You have researched {research_count}x today.'
footer += "\n" + f'Seventra: Exodus of Heroes | Research v{VERSION} | !research help'
footer += "\nCreators: quiversong#2772 (Adrienne)"

# Stats
stats = {}
if not R_STATS_VAR in cv:
  c.set_cvar(R_STATS_VAR, dump_json(stats))
else:
  stats = load_json(cv[R_STATS_VAR])

if len(args) > 0 and args[0] == "stats":
  t = f'{c.name}\'s research statistics...'
  if stats == {}:
    f = f'You have no statistics!|Go do some research!'
    return 0
  stats_list = [key.split('_')[1] + (' successes' if key.startswith('s_') else ' total') +
      f': {value}' for key, value in stats.items()]
  f = 'Your research history shows:|' + '\n'.join(stats_list)
  return 0

if len(args) > 0 and args[0] == "resetstats":
  c.delete_cvar(R_STATS_VAR)
  t = "Resetting research statistics..."
  return 0

# Reset
if len(args) > 0 and args[0] == "reset":
  c.delete_cvar(R_TIME_VAR)
  c.delete_cvar(R_STAGE_VAR)
  t = "Resetting research state..."
  footer = footer.replace(f'{research_count}x today', '0x today')
  return 0

stage_vars, stage_topic, current_stage, auto_adv = None, None, None, None

if R_STAGE_VAR in cv:
    stage_vars = cv[R_STAGE_VAR].split(":")
    entry_id = stage_vars[0]
    current_stage = stage_vars[1]
    auto_adv = stage_vars[2] == 'True'

categories = load_json(get_gvar(categories_var))
entries = load_json(get_gvar(entries_var))
areas = load_json(get_gvar(areas_var))
areas_visited = load_json(cv[R_AREAS_VISITED_VAR]) if R_AREAS_VISITED_VAR in cv else []
spell_attr = 'INT' if intelligenceMod >= charismaMod else 'CHA'
spell_mod = charismaMod if spell_attr == 'CHA' else intelligenceMod

in_wrong_stage = current_stage and (len(args) == 0 or (len(args) > 0 and current_stage != args[0]))
if in_wrong_stage:
    name = entries[entry_id]['name']
    f = f'Oops! You are already researching \'{name}\'!|Use `!research {current_stage}` to continue.'
    thumb = image
    return 1

if len(args) == 0 or (not current_stage and args[0].lower() != 'start'):
    f = f'Ready to start researching?|Type `!research start` to enter the Foundation Research Center.'
    research_images = [
        'https://cdn.discordapp.com/attachments/827581981452795975/851694263058432040/BookGen.jpeg',
        'https://cdn.discordapp.com/attachments/827581981452795975/851694419753041960/d8294928b89f344318e248ee809853c8.jpeg',
        'https://cdn.discordapp.com/attachments/827581981452795975/851694727874478090/the_library_of_babel_by_owen_c-d3gvei32.jpeg',
        'https://cdn.discordapp.com/attachments/827581981452795975/851694928282779668/Library.jpeg',
        'https://cdn.discordapp.com/attachments/827581981452795975/851695083829198889/d0beea47-7fd5-4af9-b514-efd8838c5378-candlekeep-mysteries-_-key-art_-artist-credit_-clint-cear...jpg',
        'https://cdn.discordapp.com/attachments/827581981452795975/851695815604437013/226.png'
    ]
    img = research_images[roll(f'1d{len(research_images)}') - 1]
    return 0

action = args[0]

if action == "start":
    if wait_time != None:
        f = f'{c.name} is exhausted from so much research today...|You have to wait {wait_time} until you can research again.'
        f += '\n(Research resets at midnight UTC)'
        return 1

    #! research_count = devrae_f daily_control_increase_counter(#P R_TIME_VAR) !#
    ##### devrae function insert [daily_control_increase_counter] #####
    research_count = None
    __p0__ = R_TIME_VAR
    # returns current counter and wait time text if any
    _var_name = __p0__
    _cvars = character().cvars
    if not _var_name in _cvars or _cvars[_var_name] == "0:0":
      _now = time()
      character().set_cvar(_var_name, f'1:{_now}')
      __result__ = 1
    else:
      _var_parts = _cvars[_var_name].split(':')
      _count = int(_var_parts[0]) + 1
      _time = _var_parts[1]
      character().set_cvar(_var_name, f'{_count}:{_time}')
      __result__ = _count
    research_count = __result__
    ##### devrae function end [daily_control_increase_counter] #####
    footer = footer.replace(f'{research_count - 1}x today', f'{research_count}x today')

    a_roll = roll("1d100")
    category_chances = [(k, v['chance_cha']) if spell_attr == 'CHA' else (k, v['chance_int']) for k, v in categories.items()]
    category_id = [k for k, v in category_chances if (a_roll == v if not 'List' in typeof(v) else a_roll == v[0] if len(v) == 1 else a_roll >= v[0] and a_roll <= v[1])]
    category_id = category_id[0]
    category_name = categories[category_id]['name']

    category_entries = [k for k, v in entries.items() if v['type'] == category_id]
    entry_id = category_entries[roll(f'1d{len(category_entries)}') - 1]
    entry = entries[entry_id]
    entry_name = entry['name']

    check_mod = f'{spell_mod} [Spell Mod]'
    arcana_skill = [s[1] for s in character().skills if s[0] == 'arcana'][0]
    if arcana_skill.prof > 0:
        check_mod += f' + {arcana_skill.prof * proficiencyBonus} [Arcana prof]'

    arcana_roll = vroll(f'1d20 + {check_mod}')
    is_crit = arcana_roll.result.crit == 1

    if research_count == 1:
        if len(areas_visited) >= len(areas):
            areas_visited = []
        indexes_not_visited = [x for x in range(0, len(areas)) if x not in areas_visited]
        new_area_index = indexes_not_visited[roll(f'1d{len(indexes_not_visited) - 1}')]
        areas_visited.append(new_area_index)
        c.set_cvar(R_AREAS_VISITED_VAR, dump_json(areas_visited))

        area = areas[new_area_index]
        img = area['url']

        t = f'{c.name} enters the Foundation Research Chamber!'
        f = f"Reality warps around you, and you find yourself {area['name']}|"
        f += area["intro"]

        f2 = "You feel your mind being probed...|"
    else:
        area = areas[areas_visited[len(areas_visited) - 1]]
        thumb = area['url']

        t = f'{c.name} continues researching in the Foundation Research Chamber!'
        f2 = f"Still {area['name']} you feel your mind being probed...|"


    f2 += "The Foundation measures how far your knowledge goes...\Can you handle the communion with it?\n"
    f2 += f"**Arcana roll:** {arcana_roll.full}"

    if arcana_roll.total >= entry['arcana_dc'] or is_crit:
        c.set_cvar(R_STAGE_VAR, f'{entry_id}:identify:{is_crit}')
        f3 = f"The Research Chamber has chosen a topic for you to catalogue...|"
        f3 += f"**Category:** `{category_name}`\n\n"
        f3 += "Use `!research identify` to identify its mysteries."
    else:
        c.delete_cvar(R_STAGE_VAR)
        f3 = "Time" if research_count == 1 else "Again, time"
        f3 += " seems to stop, and the chamber goes dark...|"
        f3 += "There is no knowledge suitable for you at this time.\nMaybe they will deem you worthy next time?"
        f3 += "\n\nTo try again, use `!research start`."

    stats["t_researches"] = stats["t_researches"] + 1 if "t_researches" in stats else 1
    stats["s_research_start"] = stats["s_research_start"] + 1 if "s_research_start" in stats else 1
    c.set_cvar(R_STATS_VAR, dump_json(stats))
    return 0

entry = entries[entry_id]
entry_name = entry["name"]
category_id = entry['type']
category = categories[category_id]
category_name = category['name']
add_to_bag = None

if action == "identify":
    skills_by_category = {
        "alchemy": cs.arcana,
        "arcana_domain": cs.arcana,
        "arts": cs.performance,
        "geography": cs.nature,
        "history": cs.history,
        "magic_items": cs.arcana,
        "medicine": cs.medicine,
        "personality": cs.persuasion
    }

    skill_name_by_category = {
        "alchemy": "Arcana",
        "arcana_domain": "Arcana",
        "arts": "Performance",
        "geography": "Nature",
        "history": "History",
        "magic_items": "Arcana",
        "medicine": "Medicine",
        "personality": "Persuasion"
    }

    skill_text = {
        "alchemy": "You use your knowledge in Arcana to unveil the alchemy secrets of the Foundation...",
        "arcana_domain": "You use your Arcana knowledge to unveil the secrets of the Foundation...",
        "arts": "You use your experience with Art and Performance to unveil the secrets of the Foundation...",
        "geography": "You use your knowledge about Nature to unveil the geography secrets stored in the Foundation...",
        "history": "You use your knowledge about History to unveil the secrets kept by the Foundation...",
        "magic_items": "You use your Arcana expertise to identify the Foundation database of Magic Items...",
        "medicine": "You use your experience with Medicine to understand and transcribe the knowledge kept by the Foundation...",
        "personality": "You use your Charisma skills to put yourself in their shoes and understand their motivations..."
    }

    images = entry['img_url']
    entry_img = images[roll(f'1d{len(images)}') - 1] if len(images) > 0 else ""
    if entry_img == "":
        category_images = category['img_url']
        entry_img = category_images[roll(f'1d{len(category_images)}') - 1]
    c.set_cvar(R_IMG_VAR, entry_img)
    thumb = entry_img

    skill = skills_by_category[category_id]
    skill_name = skill_name_by_category[category_id]

    adv_status = True if pargs.adv() == 1 or auto_adv else False if pargs.adv() == -1 else None
    s_roll = vroll(skill.d20(base_adv = adv_status))
    is_crit = s_roll.result.crit == 1
    succ = s_roll.total >= entry["check_dc"] or is_crit

    t = f"{c.name} tries to understand the secrets of the Foundation!"
    f = f"You are presented with a piece of knowledge about **'{category_name}':**|"
    if category_id == "magic_items":
        f += f"```Can you identify an {entry_name}?```"
    else:
        f += f"```{entry_name}```"

    f2 = f"{skill_text[category_id]}|"
    f2 += f"**{skill_name} roll:** {s_roll.full}" + "\n" + f"{sl if succ else fl}"

    if succ:
        stats["s_identify"] = stats["s_identify"] + 1 if "s_identify" in stats else 1
        f3 = 'Well done!|Use `!research catalogue` to catalogue the knowledge you acquired.'
        c.set_cvar(R_STAGE_VAR, f'{entry_id}:catalogue:{is_crit}')
    else:
        thumb = image
        f3 = f'The information about `{entry_name}` was too complex for you to grasp...|'
        f3 += 'Better luck next time!\n\nUse `!research start` to try again.'
        c.delete_cvar(R_STAGE_VAR)

elif action == 'catalogue':
    c.delete_cvar(R_STAGE_VAR)
    b_bonus_param = ' + '.join(pargs.get('b', default=[''])).strip()
    dice = '2d20kh1' if pargs.adv() == 1 or auto_adv else '1d20kl1' if pargs.adv() == -1 else '1d20'
    s_roll = vroll(f'{dice} + {constitutionMod}{b_bonus_param}')
    succ = s_roll.total >= entry["concentration_dc"]

    t = f'{c.name} tries to catalogue the information...'
    f = 'You can feel the knowledge being transferred from your mind...|'
    f += 'Can you hold your Concentration on to the knowledge as it is catalogued by The Foundation Chamber?\n'
    f += f'**Constitution save:** {s_roll.full}'

    if R_IMG_VAR in cv:
        thumb = cv[R_IMG_VAR]
        c.delete_cvar(R_IMG_VAR)
    else:
        thumb = image

    if succ:
        stats["s_catalogue"] = stats["s_catalogue"] + 1 if "s_catalogue" in stats else 1
        add_to_bag = {}
        loot_list = ""
        if "loot" in entry:
              for loot_n in entry["loot"]:
                    loot_qt = entry["loot"][loot_n]
                    add_to_bag[loot_n] = loot_qt
                    spaces = '   ' if loot_qt < 10 else '  ' if loot_qt < 100 else ' ' if loot_qt < 1000 else ''
                    loot_list += f'`{spaces}{loot_qt}x {loot_n}`' + '\n'

        f2 = f'Success!|The knowledge you acquired about **{entry_name}** has been successfully catalogued!'
        f3 = 'When you next exit the chamber...|You feel tired and can not think straight.\n'
        f3 += 'Most of the knowledge you acquired is gone from your memories... but you keep the bounty paid by The Foundation!'
        f4 = f'You gained:|{loot_list}They have been added to your "Research" bag!\n\nResearch some more with `!research start`!'
    else:
        thumb = image
        f2 = f'{c.name} was NOT able to hold onto the knowledge long enough for it to be catalogued!'
        f2 += "Better luck next time!\n\nUse `!research start` to try again."

c.set_cvar(R_STATS_VAR, dump_json(stats))

if add_to_bag != None:
  _bag_name = "Research"
  _content = add_to_bag

  #! devrae_f add_to_bag (#P "Research" #P add_to_bag) !#
  ##### devrae function insert [add_to_bag] #####
  __p0__ = "Research"
  __p1__ = add_to_bag
  _bag_name = __p0__
  _content = __p1__

  _cv = character().cvars
  _bags = load_json(_cv["bags"]) if "bags" in _cv else []
  _bag_index = [i for i, x in enumerate(_bags) if x[0] == _bag_name]
  _bag_index = _bag_index[0] if len(_bag_index) > 0 else -1
  if _bag_index == -1:
    _bags.append([_bag_name, {}])
    _bag_index = len(_bags) - 1
  _bag_content = _bags[_bag_index][1]
  for _key in _content:
    if _key in _bag_content:
      _bag_content[_key] = _bag_content[_key] + _content[_key]
    else:
      _bag_content[_key] = _content[_key]
  _bags[_bag_index] = [_bag_name, _bag_content]
  character().set_cvar('bags', dump_json(_bags))

  ##### devrae function end [add_to_bag] #####

</drac2>
-title "{{t}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-f "{f}"' if f else ""}}
{{f'-f "{f2}"' if f2 else ""}}
{{f'-f "{f3}"' if f3 else ""}}
{{f'-f "{f4}"' if f4 else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
