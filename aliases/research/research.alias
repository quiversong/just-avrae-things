embed
<drac2>
# Configuration Variables
IS_LIVE = False
VERSION = '1.06'

BETA_VAR = "05788227-fe82-4006-98f2-5e9ec50d2a7e"
LIVE_VAR = "05788227-fe82-4006-98f2-5e9ec50d2a7e"
DAILY_CAP = 6

# Code
args = &ARGS&
pargs = argparse(args)
c = character()
cv, cs = c.cvars, c.skills

data_var = LIVE_VAR if IS_LIVE else BETA_VAR

t = f'{c.name} wants to aid The Aldahen Syndicate with their research!'
f, f2, f3, color = None, None, None, 'f200ff'

img = None
thumb = None
sl, fl = "**Success!**", "**Failure!**"

R_TIME_VAR = "_r_tc_"
R_STAGE_VAR = "_r_sc_"
R_STATS_VAR = "_r_st_"

research_count = -1
#! research_count = devrae_f get_activity_count(#P R_TIME_VAR) !#
##### devrae function insert [get_activity_count] #####
research_count = None
__p0__ = R_TIME_VAR
_var_name = __p0__
_cvars = character().cvars
_count = 0
if _var_name in _cvars:
  _var_parts = _cvars[_var_name].split(':')
  _count = int(_var_parts[0])
__result__ = _count
research_count = __result__
##### devrae function end [get_activity_count] #####

footer = "Don't forget to role-play your research!\n"
footer += f'There is a limit of {DAILY_CAP} researches per day. You have researched {research_count}x today.'
footer += "\n" + f'Seventra: Exodus of Heroes | Research v{VERSION} | !hunt help'
footer += "\nCreators: quiversong#2772 (Adrienne)"

# Stats
stats = {}
if not R_STATS_VAR in cv:
  c.set_cvar(R_STATS_VAR, dump_json(stats))
else:
  stats = load_json(cv[R_STATS_VAR])

if len(args) > 0 and args[0] == "stats":
  t = f'{c.name}\'s research statistics...'
  if stats == {}:
    f = f'You have no statistics!|Go do some research!'
    return 0
  stats_list = [key.split('_')[1] + (' successes' if key.startswith('s_') else ' total') +
      f': {value}' for key, value in stats.items()]
  f = 'Your research history shows:|' + '\n'.join(stats_list)
  return 0

if len(args) > 0 and args[0] == "resetstats":
  c.delete_cvar(R_STATS_VAR)
  t = "Resetting research statistics..."
  return 0

# Reset
if len(args) > 0 and args[0] == "reset":
  c.delete_cvar(R_TIME_VAR)
  c.delete_cvar(R_STAGE_VAR)
  t = "Resetting research state..."
  footer = footer.replace(f'{research_count}x today', '0x today')
  return 0

stage_vars, stage_topic, current_stage = None, None, None

if R_STAGE_VAR in cv:
    stage_vars = cv[R_STAGE_VAR].split(":")
    entry_id = stage_vars[0]
    current_stage = stage_vars[1]

data = load_json(get_gvar(data_var))
entries = data["entries"]

in_wrong_stage = current_stage and (len(args) == 0 or (len(args) > 0 and current_stage != args[0]))
if in_wrong_stage:
  name = entries[entry_id]['name']
  add_n = "n" if name[0].upper() in "AEIOU" else ""
  f = f'Oops! You are already researching a{add_n} {name}!|Use `!research {current_stage}` to continue.'
  thumb = image
  return 1

if len(args) == 0 or not args[0].lower() in ['start', 'identify', 'catalogue']:
  f = f'Ready to start researtching?|Type `!research start` to enter the Aldahen Research Center.'
  research_images = [
    'https://cdn.discordapp.com/attachments/827581981452795975/851694263058432040/BookGen.jpeg',
    'https://cdn.discordapp.com/attachments/827581981452795975/851694419753041960/d8294928b89f344318e248ee809853c8.jpeg',
    'https://cdn.discordapp.com/attachments/827581981452795975/851694727874478090/the_library_of_babel_by_owen_c-d3gvei32.jpeg',
    'https://cdn.discordapp.com/attachments/827581981452795975/851694928282779668/Library.jpeg',
    'https://cdn.discordapp.com/attachments/827581981452795975/851695083829198889/d0beea47-7fd5-4af9-b514-efd8838c5378-candlekeep-mysteries-_-key-art_-artist-credit_-clint-cear...jpg',
    'https://cdn.discordapp.com/attachments/827581981452795975/851695815604437013/226.png'
  ]
  img = research_images[roll(f'1d{len(research_images)}') - 1]
  return 0

#! daily_control = devrae_f daily_activity_control(#P R_TIME_VAR #P DAILY_CAP) !#
##### devrae function insert [daily_activity_control] #####
daily_control = None
__p0__ = R_TIME_VAR
__p1__ = DAILY_CAP
# increments counter and returns current counter and wait time text if any
_var_name = __p0__
_daily_limit = __p1__
_cvars = character().cvars

_now = time()
if _var_name not in _cvars:
  __result__ = { "count": 1, "wait_time": None }
  character().set_cvar(_var_name, f'1:{_now}')
else:
  _var_parts = _cvars[_var_name].split(':')
  _count = int(_var_parts[0])
  _first_time = float(_var_parts[1])
  _wait_time = None
  _is_next_day = False

  if _count > 0 and _first_time != None:
    _passed_in_day_since_first_time = _first_time % 86400
    _next_midnight_after_first_time = _first_time + (86400 - _passed_in_day_since_first_time)
    if _now > _next_midnight_after_first_time:
      _is_next_day = True
    elif _count >= _daily_limit:
      _wait_time = _next_midnight_after_first_time - _now
      _hours = floor(_wait_time / 3600)
      _minutes = 0
      if _hours == 0:
        _minutes = ceil(_wait_time / 60)
      else:
        _minutes = ceil((_wait_time % 3600) / 60)
      _wait_text = (str(_hours) + ' hours and ' if _hours > 0 else '') + str(_minutes) + ' minutes'

  if _is_next_day:
    _count = 1
    character().set_cvar(_var_name, f'{_count}:{_now}')
    __result__ = { "count": _count, "wait_time": None }
  elif _count < _daily_limit:
    _count += 1
    character().set_cvar(_var_name, f'{_count}:{_first_time}')
    __result__ = { "count": _count, "wait_time": None }
  else:
    __result__ = { "count": _count, "wait_time": _wait_text }
daily_control = __result__
##### devrae function end [daily_activity_control] #####

research_count = daily_control["count"]
wait_time = daily_control["wait_time"]
action = args[0]

if action == "start":
    if wait_time != None:
        f = f'{c.name} is exhausted from so much research today...|You have to wait {wait_time} until you can research again.'
        f += '\n(Research resets at midnight UTC)'
        return 1

    stats["t_researches"] = stats["t_researches"] + 1 if "t_researches" in stats else 1

    a_roll = roll("1d100")
    chances_as_tuples = [(k, v) for k, v in data["chances"].items()]
    entry_id = [k for k, v in chances_as_tuples if (a_roll == v if not 'List' in typeof(v) else a_roll == v[0] if len(v) == 1 else a_roll >= v[0] and a_roll <= v[1])]
    entry_id = entry_id[0]

    entry = entries[entry_id]
    entry_name = entry['name']
    c.set_cvar(R_STAGE_VAR, f'{entry_id}:identify')

    t = f'{c.name} enters the Aldahen Research Chamber!'

    f = f"The chamber is an empty room that seems to have no end.|"
    f += "Stars shine up above you and below, reflected in the glass smooth floor."
    f += " The only thing inside the chamber is the faint image of a tree, standing alone and invintingly."

    f2 = f"{c.name} places their hand on the chamber's tree!|"
    f2 += f"{c.name} feels the tree channeling knowledge into their mind..."

    f3 = f"The Research Chamber has chosen a topic for {c.name} to research!|"
    f3 += "The chosen topic is **\\\'" + entry_name + "\\\'**!"
    f3 += "\nUse `!research identify` to identify the mysteries about this piece of knowledge."
    img = 'https://cdn.discordapp.com/attachments/827581981452795975/851843046365462558/wp2776980-starry-sky-wallpaper.jpg'
    c.set_cvar(R_STATS_VAR, dump_json(stats))
    return 0

entry = entries[entry_id]
entry_name = entry["name"]
add_to_bag = None

if action == "identify":
    skills_by_check_type = {
        "medicine": cs.medicine,
        "survival": cs.survival
    }
    check_type = entry["check"]
    skill = skills_by_check_type[check_type]

    adv_status = True if pargs.adv() == 1 else False if pargs.adv() == -1 else None
    s_roll = vroll(skill.d20(base_adv = adv_status))
    succ = s_roll.total > entry["dc"]

    t = f"{c.name} tries to identify and understand the chamber\\\'s knowledge!"
    f = f'{c.name} uses their knowledge in {check_type}...|**{check_type.capitalize()} roll:** {s_roll.full}\n{sl if succ else fl}'
    if succ:
      #thumb = anm["img"]
      stats["s_identify"] = stats["s_identify"] + 1 if "s_identify" in stats else 1
      f2 = f'{c.name} has successfully acquired the knowledge about {entry_name}!|'
      f2 += 'Now use `!research catalogue` to catalogue the knowledge you acquired.'
      c.set_cvar(R_STAGE_VAR, f'{entry_id}:catalogue')
    else:
      thumb = image
      f2 = f'The information about {entry_name} was too complex for you to grasp...|'
      f2 += 'Better luck next time! Use `!research start` to try again.'
      c.delete_cvar(R_STAGE_VAR)

elif action == 'catalogue':
    c.delete_cvar(R_STAGE_VAR)
    constitution_check = 10
    s_roll = vroll(f'1d20 + {constitutionMod}')
    succ = s_roll.total > 10
    t = f'{c.name} tries to catalogue their knowledge about {entry_name}...'
    f = f'{c.name} has to maintain the knowledge while it is extracted by the Aldahen...|**Constitution save:** {s_roll.full}\n{sl if succ else fl}'
    if succ:
        stats["s_catalogue"] = stats["s_catalogue"] + 1 if "s_catalogue" in stats else 1
        add_to_bag = {}
        f2 = f'{c.name} is able to transfer the knowledge to the Aldahen and receives a bounty in return.|'
        f2 += 'Unfortunately most of the knowledge is lost once you exit the chamber, but you keep the loot!'
    else:
        f2 = f'{c.name} was not able to hold onto the knowledge long enough to transfer it to the Aldahen!|'
        f2 += "Better luck next time! Use `!research start` to try again."

c.set_cvar(R_STATS_VAR, dump_json(stats))

if add_to_bag != None:
  _bag_name = "Research"
  _content = add_to_bag

  #! devrae_f add_to_bag (#P "Hunting" #P add_to_bag) !#
  ##### devrae function insert [add_to_bag] #####
  __p0__ = "Hunting"
  __p1__ = add_to_bag
  _bag_name = __p0__
  _content = __p1__

  _cv = character().cvars
  _bags = load_json(_cv["bags"]) if "bags" in _cv else []
  _bag_index = [i for i, x in enumerate(_bags) if x[0] == _bag_name]
  _bag_index = _bag_index[0] if len(_bag_index) > 0 else -1
  if _bag_index == -1:
    _bags.append([_bag_name, {}])
    _bag_index = len(_bags) - 1
  _bag_content = _bags[_bag_index][1]
  for _key in _content:
    if _key in _bag_content:
      _bag_content[_key] = _bag_content[_key] + _content[_key]
    else:
      _bag_content[_key] = _content[_key]
  _bags[_bag_index] = [_bag_name, _bag_content]
  character().set_cvar('bags', dump_json(_bags))

  ##### devrae function end [add_to_bag] #####

</drac2>
-title "{{t}}"
{{f'-image "{img}"' if img else ""}}
{{f'-thumb "{thumb}"' if thumb else ""}}
{{f'-f "{f}"' if f else ""}}
{{f'-f "{f2}"' if f2 else ""}}
{{f'-f "{f3}"' if f3 else ""}}
{{f'-color "{color}"' if color else ""}}
{{f'-footer "{footer}"' if footer else ""}}
